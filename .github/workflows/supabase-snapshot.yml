cat > .github/workflows/supabase-snapshot.yml <<'EOF'
name: Supabase Snapshot & Docs

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "0 21 * * *"  # daily 21:00 UTC
  workflow_dispatch: {}

jobs:
  snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install clients
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client jq python3

      # Build a correct DB URL from discrete secrets (auto-encode password)
      - name: Build DB URL from parts
        id: build_url
        env:
          DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          DB_PASS: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          set -euo pipefail
          for v in DB_HOST DB_NAME DB_USER DB_PASS; do
            if [ -z "${!v}" ]; then echo "❌ Missing secret: $v"; exit 1; fi
          done
          DB_URL=$(python3 - <<'PY'
import os, urllib.parse
host=os.environ["DB_HOST"].strip()
db  =os.environ["DB_NAME"].strip()
usr =os.environ["DB_USER"].strip()
pwd =urllib.parse.quote(os.environ["DB_PASS"], safe="")
print(f"postgresql://{usr}:{pwd}@{host}:5432/{db}?sslmode=require")
PY
)
          echo "::add-mask::$DB_URL"
          echo "SUPABASE_DB_URL=$DB_URL" >> $GITHUB_ENV
          echo "✅ Built DB URL"

      # Quick connectivity check so failures are obvious
      - name: DB smoke test
        run: |
          set -e
          psql "$SUPABASE_DB_URL" -At -c 'select current_database(), current_user;'
          echo "✅ DB connectivity OK"

      - name: Generate snapshot + inventory
        env:
          SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SB_PROJECT_REF: ${{ secrets.SB_PROJECT_REF }}
        run: make report

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Supabase backup & docs (automated)"
          branch: main
          file_pattern: |
            infra/dumps/**
            infra/inventory/**
            supabase/functions/**
EOF

git add .github/workflows/supabase-snapshot.yml
git commit -m "CI: build DB URL from parts + smoke test"
git push
